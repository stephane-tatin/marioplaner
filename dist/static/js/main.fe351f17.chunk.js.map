{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Dashboard.js","components/project/ProjectDetail.js","components/auth/SignIn.js","components/auth/SignUp.js","components/project/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducer/authReducer.js","store/reducer/projectReducer.js","store/reducer/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","firebase","getFirebase","auth","then","type","logout","props","className","to","onClick","profile","initials","SignedOutLink","state","links","uid","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","toString","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestoreConnect","collection","orderBy","limit","firestore","ordered","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","console","log","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.fe351f17.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport {signOut} from \"../../store/actions/authActions\"\r\n\r\n\r\nconst SignedInLink = (props) => {\r\n    return (\r\n    <ul className=\"right\">\r\n        <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n        <li onClick={props.signOut}>Log Out</li>\r\n        <li><NavLink to=\"/\" className=\"btn btn-floating pink ligthen-1\">{props.profile.initials}</NavLink></li>\r\n    </ul>\r\n    \r\n        )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut : () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLink)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n      \r\n      firebase.auth().signInWithEmailAndPassword(\r\n        credentials.email,\r\n        credentials.password\r\n      ).then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  \r\n    }\r\n  }\r\n  \r\n  export const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n  \r\n      firebase.auth().signOut().then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n      });\r\n\r\n      firebase.logout()\r\n    }\r\n  }\r\n  \r\n  export const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n  \r\n      firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email, \r\n        newUser.password\r\n      ).then((resp) => {\r\n        return firestore.collection('users').doc(resp.user.uid).set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0]\r\n        });\r\n      }).then(() => {\r\n          console.log(\"success\")\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      }).catch((err) => {\r\n          console.log(err)\r\n        dispatch({ type: 'SIGNUP_ERROR', err});\r\n      });\r\n    }\r\n  }","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\n\r\nconst SignedOutLink = () => {\r\n    return (\r\n    <ul className=\"right\">\r\n        <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n        <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n   </ul>\r\n    \r\n        )\r\n}\r\n\r\nexport default SignedOutLink","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport SignedInLink from \"./SignedInLinks\"\r\nimport SignedOutLink from \"./SignedOutLinks\"\r\nimport { connect } from \"react-redux\"\r\n\r\n\r\nconst Navbar = (props) => {\r\n    const {auth, profile} = props\r\n    const links = auth.uid ? <SignedInLink profile={profile}></SignedInLink> : <SignedOutLink></SignedOutLink>\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">Mario Planner</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    \r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth : state.firebase.auth,\r\n        profile : state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Navbar)","import React from \"react\"\r\nimport moment from \"moment\"\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props\r\n        return (\r\n            <div className=\"section\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content grey-text text-darken-3\">\r\n                        <span className=\"card-title\">Notifications</span>\r\n                        <ul className=\"notifications\">\r\n                            {notifications && notifications.map(notification => {\r\n                                return ( \r\n                                    <li key={notification.id}>\r\n                                        <span className=\"pink-text\">{notification.user}</span>\r\n                                        <span> {notification.content}</span>\r\n                                        <div className=\"grey-text note-date\">\r\n                                            {moment(notification.time.toDate()).fromNow()}\r\n                                        </div>\r\n                                    </li>\r\n                            )\r\n                            })}\r\n                            \r\n                        </ul>\r\n                    </div>\r\n                </div> \r\n            </div>\r\n            )   \r\n    }\r\n      \r\n\r\n\r\nexport default Notifications","import React from \"react\"\r\nimport moment from \"moment\"\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n            <span className=\"card-title\"> {project.title} </span>\r\n            <p>Posted by { project.authorFirstName } { project.authorLastName }</p>\r\n            <p className=\"grey-text\">{ moment(project.createdAt.toDate().toString()).calendar()}</p>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary\r\n\r\n","import React from \"react\"\r\nimport ProjectSummary from \"./ProjectSummary\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={\"project/\" + project.id} key={project.id} >\r\n                        <ProjectSummary project={project}></ProjectSummary>\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n\r\n    \r\n}\r\nexport default ProjectList","import React, {Component} from \"react\"\r\nimport Notifications from \"./Notifications\"\r\nimport ProjectList from \"../project/ProjectList\"\r\nimport { connect } from \"react-redux\"\r\nimport { firestoreConnect } from \"react-redux-firebase\"\r\nimport { compose } from \"redux\"\r\nimport {Redirect } from \"react-router-dom\"\r\n\r\n\r\nclass Dashboard extends Component {\r\n    render () {\r\n      \r\n        const {projects, auth, notifications }= this.props\r\n      \r\n        if (!auth.uid) return <Redirect to =\"/signin\"></Redirect>\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}></ProjectList>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications = {notifications}></Notifications>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   \r\n    return {\r\n        auth : state.firebase.auth,\r\n        notifications : state.firestore.ordered.notifications,\r\n        projects : state.firestore.ordered.projects\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    firestoreConnect([\r\n        {collection :\"projects\",  orderBy: [\"createdAt\", \"desc\"]},\r\n        {collection : \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"]}\r\n    ]),\r\n    connect(mapStateToProps)\r\n    )(Dashboard)\r\n\r\n\r\n\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { firestoreConnect } from \"react-redux-firebase\"\r\nimport { compose } from \"redux\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport moment from \"moment\"\r\n\r\nconst ProjectDetails = (props) => {\r\n    const {project, auth } = props \r\n    \r\n    if(!auth.uid) return <Redirect to=\"/signin\"></Redirect>\r\n    if (project) {\r\n        return (\r\n            <div className=\"section project-details\">\r\n                <div className=\"card z.depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <div className=\"card-title\">{ project.title }</div>\r\n                        <p>{ project.content }</p>\r\n                    </div>\r\n                    <div className=\"card-action gret ligthen-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName}  {project.authorLastName}</div>\r\n                        <div>{ moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else  {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading Project....</p>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\nconst mapStateTopProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project : project,\r\n        auth : state.firebase.auth\r\n    }\r\n} \r\n\r\nexport default compose(\r\n    connect(mapStateTopProps),\r\n    firestoreConnect(() => ['projects']),\r\n)(ProjectDetails)","import React, {Component} from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { signIn } from \"../../store/actions/authActions\"\r\nimport {Redirect} from \"react-router-dom\"\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password:\"\"\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] :e.target.value     \r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { authError, auth } = this.props\r\n\r\n        if (auth.uid) return <Redirect to=\"/\"></Redirect>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink ligthen-1 z-depth-0\">Login</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p>{authError}</p> : null}\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError : state.auth.authError,\r\n        auth : state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, {Component} from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport {signUp} from \"../../store/actions/authActions\"\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password:\"\",\r\n        firstName :\"\",\r\n        lastName : \"\"\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] :e.target.value     \r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    render() {\r\n        const {auth, authError } = this.props\r\n        if (auth.uid) return <Redirect to=\"/\"></Redirect>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink ligthen-1 z-depth-0\">Sign Up</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p>{ authError } </p> : null}\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp : (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth : state.firebase.auth,\r\n        authError : state.auth.authError\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, {Component} from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { createProject } from \"../../store/actions/projectActions\"\r\nimport  { Redirect } from \"react-router-dom\"\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: \"\",\r\n        content:\"\"\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] :e.target.value     \r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state)\r\n        this.props.history.push(\"/\")\r\n    }\r\n\r\n    render() {\r\n        const {auth} = this.props\r\n        if (!auth.uid) return <Redirect to =\"signin\"></Redirect>\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                  </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink ligthen-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth : state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore } ) => {\r\n        //make async call\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile\r\n        const authorId = getState().firebase.auth.uid\r\n        firestore.collection(\"projects\").add({\r\n            ...project, \r\n            authorFirstName: profile.firstName,\r\n            authorLastName : profile.lastName,\r\n            authorId : authorId,\r\n            createdAt : new Date()\r\n        }).then(() => {\r\n            dispatch({ type : \"CREATE_PROJECT\", project })}\r\n        ).catch((err) => {\r\n            dispatch({ type: \"CREATE_PROJECT_ERROR\", err})\r\n        })\r\n    }\r\n}","import React, {Component} from 'react';\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\"\nimport Navbar from \"./components/layout/Navbar\"\nimport Dashboard from \"./components/dashboard/Dashboard\"\nimport ProjectDetails from \"./components/project/ProjectDetail\"\nimport SignIn from \"./components/auth/SignIn\"\nimport SignUp from \"./components/auth/SignUp\"\nimport CreateProject from \"./components/project/CreateProject\"\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Navbar>\n        \n        </Navbar>\n        <Switch>\n            <Route exact path=\"/\" component={Dashboard}></Route>\n            <Route path=\"/project/:id\" component={ProjectDetails}></Route>\n            <Route path=\"/signin\" component = {SignIn}></Route>\n            <Route path=\"/signup\" component = {SignUp}></Route>\n            <Route path=\"/create\" component = {CreateProject}></Route>\n        </Switch>\n      \n     </div>\n     </BrowserRouter>\n    )\n  }\n}\n \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError : null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN_ERROR\" :\r\n            return {\r\n                ...state, \r\n                authError : \"login failed\"\r\n            }\r\n        case \"LOGIN_SUCCESS\" :\r\n            console.log(\"login successful\")\r\n            return {\r\n                ...state,\r\n                authError : null\r\n            }\r\n        case \"SIGNOUT_SUCCESS\" :\r\n            console.log(\"signout successful\")\r\n            return state\r\n            \r\n        case \"SIGNUP_SUCCESS\" :\r\n            console.log(\"Signed up success\")\r\n            return {\r\n                ...state,\r\n                authError : null\r\n            }\r\n        case \"SIGNUP_ERROR\" : \r\n            console.log(\"Signed up error\")\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default : \r\n        return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects : [\r\n        {id : \"1\", title: \"help me find Peach\", content : \"Minim elit sit voluptate ipsum elit do id ad tempor nostrud in labore nulla mollit.\" },\r\n        {id : \"2\", title: \"help me find Toad\", content : \"Amet culpa nostrud nisi incididunt.\" },\r\n        {id : \"3\", title: \"help me find Yoshi\", content : \"Laboris deserunt pariatur officia elit ex.\" },\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case \"CREATE_PROJECT\":\r\n            console.log(\"created project\", action.project)\r\n            return state;\r\n        case \"CREATE_PROJECT_ERROR\":\r\n            console.log(\"create project error\", action.err)\r\n            return state;\r\n        default : \r\n            return state\r\n        }\r\n}\r\n\r\nexport default projectReducer","import authReducer from \"./authReducer\"\r\nimport projectReducer from \"./projectReducer\"\r\nimport { combineReducers } from \"redux\"\r\nimport { firestoreReducer } from \"redux-firestore\"\r\nimport { firebaseReducer } from \"react-redux-firebase\"\r\n\r\nconst rootReducer = combineReducers({\r\n    auth : authReducer,\r\n    project : projectReducer,\r\n    firestore : firestoreReducer,\r\n    firebase : firebaseReducer\r\n})\r\n\r\nexport default rootReducer;","import firebase from \"firebase/app\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/auth\"\r\n  \r\n  \r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyBsRssU3EH1yG89RMYrkJ2UEBKrdE_uP1E\",\r\n    authDomain: \"marioplaner-762f2.firebaseapp.com\",\r\n    databaseURL: \"https://marioplaner-762f2.firebaseio.com\",\r\n    projectId: \"marioplaner-762f2\",\r\n    storageBucket: \"marioplaner-762f2.appspot.com\",\r\n    messagingSenderId: \"224838037681\",\r\n    appId: \"1:224838037681:web:a86fbe7842cc5ce393f290\",\r\n    measurementId: \"G-JQWD82MP6S\"\r\n  };\r\n\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  //firebase.analytics();\r\n  firebase.firestore()\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from \"../src/store/reducer/rootReducer\"\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { useSelector } from 'react-redux'\n\nimport {createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase';\nimport firebase from 'firebase/app'\nimport fbConfig from './config/fbConfig'\n\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig)\n    )\n);\n\n\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true\n  }\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n}\n\nfunction AuthIsLoaded({ children }) {\n    const auth = useSelector(state => state.firebase.auth)\n    if (!isLoaded(auth)) return <div>Loading...</div>;\n    return children\n  }\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n            <AuthIsLoaded>\n                 <App />\n            </AuthIsLoaded>\n        </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}